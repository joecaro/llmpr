name: PR Description Comment Trigger

on:
  issue_comment:
    types: [created]

jobs:
  check-comment:
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && contains(github.event.comment.body, '/generate-pr-description') }}
    steps:
      - name: Get PR details
        id: pr-details
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number;
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            return {
              baseRef: pullRequest.base.ref,
              headRef: pullRequest.head.ref
            };
          result-encoding: json
    
      - name: Trigger PR description generation
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'rocket'
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: 'ðŸš€ Generating PR description...'
            });
      
  generate-description:
    needs: check-comment
    uses: ./.github/workflows/llmpr-action.yml
    with:
      base-branch: ${{ needs.check-comment.outputs.result.baseRef }}
    secrets:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }} 